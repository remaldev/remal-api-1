name: CI/CD Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Cache dependencies
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.6.0'
      - run: npm install -g npm@11.1.0
      
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run Linter
        run: npm run lint

  deps-check:
    needs: lint
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
      issues: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '23.6.0'
      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      
      - name: Check Dependencies
        id: depsCheckStep
        run: npm run deps:outdated:check

      - name: Generate outdated dependencies comment
        if: ${{ failure() && steps.depsCheckStep.outcome == 'failure' }}
        run: |
          npm outdated --json > outdated-packages.json || true
          node .github/scripts/comment-bot-deps.js

      - name: Post outdated dependencies comment
        if: ${{ failure() && steps.depsCheckStep.outcome == 'failure' && github.event_name == 'pull_request'}} 
        uses: thollander/actions-comment-pull-request@v3
        with:
          file-path: outdated-packages-report.md
          comment-tag: dependency-check

      - name: Delete outdated dependencies comment
        if: success() && github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v3
        with:
          comment-tag: dependency-check
          mode: delete

  test:
    needs: deps-check
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:17.4
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: uzer
          POSTGRES_PASSWORD: psswd
          POSTGRES_DB: test_db
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '23.6.0'
      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      
      - name: Run Prisma Migrations
        run: npm run prisma:migrate:deploy
        env:
          DB_POSTGRE_URI: postgresql://uzer:psswd@localhost:5432/test_db?schema=public

      - name: Run Tests with Coverage
        run: npm run test:cov
        env:
          CI: true
          NODE_ENV: test
          test_DB_POSTGRE_URI: postgresql://uzer:psswd@localhost:5432/test_db?schema=public
